// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: caffe_smartseg.proto

#ifndef PROTOBUF_caffe_5fsmartseg_2eproto__INCLUDED
#define PROTOBUF_caffe_5fsmartseg_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace smartseg {
class BlobVisualizeParameter;
class BlobVisualizeParameterDefaultTypeInternal;
extern BlobVisualizeParameterDefaultTypeInternal _BlobVisualizeParameter_default_instance_;
class ConfigParameter;
class ConfigParameterDefaultTypeInternal;
extern ConfigParameterDefaultTypeInternal _ConfigParameter_default_instance_;
class DilationParameter;
class DilationParameterDefaultTypeInternal;
extern DilationParameterDefaultTypeInternal _DilationParameter_default_instance_;
class FrameDataParameter;
class FrameDataParameterDefaultTypeInternal;
extern FrameDataParameterDefaultTypeInternal _FrameDataParameter_default_instance_;
class FrameSequenceDataParameter;
class FrameSequenceDataParameterDefaultTypeInternal;
extern FrameSequenceDataParameterDefaultTypeInternal _FrameSequenceDataParameter_default_instance_;
class FrameTargetParameter;
class FrameTargetParameterDefaultTypeInternal;
extern FrameTargetParameterDefaultTypeInternal _FrameTargetParameter_default_instance_;
class HorizontalViewExtractorParameter;
class HorizontalViewExtractorParameterDefaultTypeInternal;
extern HorizontalViewExtractorParameterDefaultTypeInternal _HorizontalViewExtractorParameter_default_instance_;
class HorizontalViewParameter;
class HorizontalViewParameterDefaultTypeInternal;
extern HorizontalViewParameterDefaultTypeInternal _HorizontalViewParameter_default_instance_;
class OnlineNormParameter;
class OnlineNormParameterDefaultTypeInternal;
extern OnlineNormParameterDefaultTypeInternal _OnlineNormParameter_default_instance_;
class PlanViewExtractorParameter;
class PlanViewExtractorParameterDefaultTypeInternal;
extern PlanViewExtractorParameterDefaultTypeInternal _PlanViewExtractorParameter_default_instance_;
class PlanViewParameter;
class PlanViewParameterDefaultTypeInternal;
extern PlanViewParameterDefaultTypeInternal _PlanViewParameter_default_instance_;
class PointInterpolationParameter;
class PointInterpolationParameterDefaultTypeInternal;
extern PointInterpolationParameterDefaultTypeInternal _PointInterpolationParameter_default_instance_;
class SegmentorParameter;
class SegmentorParameterDefaultTypeInternal;
extern SegmentorParameterDefaultTypeInternal _SegmentorParameter_default_instance_;
class SideViewExtractorParameter;
class SideViewExtractorParameterDefaultTypeInternal;
extern SideViewExtractorParameterDefaultTypeInternal _SideViewExtractorParameter_default_instance_;
class SideViewParameter;
class SideViewParameterDefaultTypeInternal;
extern SideViewParameterDefaultTypeInternal _SideViewParameter_default_instance_;
class ViewPoolingParameter;
class ViewPoolingParameterDefaultTypeInternal;
extern ViewPoolingParameterDefaultTypeInternal _ViewPoolingParameter_default_instance_;
class ViewUnpoolingParameter;
class ViewUnpoolingParameterDefaultTypeInternal;
extern ViewUnpoolingParameterDefaultTypeInternal _ViewUnpoolingParameter_default_instance_;
}  // namespace smartseg

namespace smartseg {

namespace protobuf_caffe_5fsmartseg_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_caffe_5fsmartseg_2eproto

enum DilationParameter_Method {
  DilationParameter_Method_CLOSEST = 0,
  DilationParameter_Method_MEAN = 1
};
bool DilationParameter_Method_IsValid(int value);
const DilationParameter_Method DilationParameter_Method_Method_MIN = DilationParameter_Method_CLOSEST;
const DilationParameter_Method DilationParameter_Method_Method_MAX = DilationParameter_Method_MEAN;
const int DilationParameter_Method_Method_ARRAYSIZE = DilationParameter_Method_Method_MAX + 1;

const ::google::protobuf::EnumDescriptor* DilationParameter_Method_descriptor();
inline const ::std::string& DilationParameter_Method_Name(DilationParameter_Method value) {
  return ::google::protobuf::internal::NameOfEnum(
    DilationParameter_Method_descriptor(), value);
}
inline bool DilationParameter_Method_Parse(
    const ::std::string& name, DilationParameter_Method* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DilationParameter_Method>(
    DilationParameter_Method_descriptor(), name, value);
}
// ===================================================================

class ConfigParameter : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:smartseg.ConfigParameter) */ {
 public:
  ConfigParameter();
  virtual ~ConfigParameter();

  ConfigParameter(const ConfigParameter& from);

  inline ConfigParameter& operator=(const ConfigParameter& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ConfigParameter& default_instance();

  static inline const ConfigParameter* internal_default_instance() {
    return reinterpret_cast<const ConfigParameter*>(
               &_ConfigParameter_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(ConfigParameter* other);

  // implements Message ----------------------------------------------

  inline ConfigParameter* New() const PROTOBUF_FINAL { return New(NULL); }

  ConfigParameter* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ConfigParameter& from);
  void MergeFrom(const ConfigParameter& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ConfigParameter* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string class_name = 2;
  int class_name_size() const;
  void clear_class_name();
  static const int kClassNameFieldNumber = 2;
  const ::std::string& class_name(int index) const;
  ::std::string* mutable_class_name(int index);
  void set_class_name(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_class_name(int index, ::std::string&& value);
  #endif
  void set_class_name(int index, const char* value);
  void set_class_name(int index, const char* value, size_t size);
  ::std::string* add_class_name();
  void add_class_name(const ::std::string& value);
  #if LANG_CXX11
  void add_class_name(::std::string&& value);
  #endif
  void add_class_name(const char* value);
  void add_class_name(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& class_name() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_class_name();

  // repeated bool class_orientation = 3;
  int class_orientation_size() const;
  void clear_class_orientation();
  static const int kClassOrientationFieldNumber = 3;
  bool class_orientation(int index) const;
  void set_class_orientation(int index, bool value);
  void add_class_orientation(bool value);
  const ::google::protobuf::RepeatedField< bool >&
      class_orientation() const;
  ::google::protobuf::RepeatedField< bool >*
      mutable_class_orientation();

  // optional int32 max_points = 1 [default = 250000];
  bool has_max_points() const;
  void clear_max_points();
  static const int kMaxPointsFieldNumber = 1;
  ::google::protobuf::int32 max_points() const;
  void set_max_points(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:smartseg.ConfigParameter)
 private:
  void set_has_max_points();
  void clear_has_max_points();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> class_name_;
  ::google::protobuf::RepeatedField< bool > class_orientation_;
  ::google::protobuf::int32 max_points_;
  friend struct protobuf_caffe_5fsmartseg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FrameDataParameter : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:smartseg.FrameDataParameter) */ {
 public:
  FrameDataParameter();
  virtual ~FrameDataParameter();

  FrameDataParameter(const FrameDataParameter& from);

  inline FrameDataParameter& operator=(const FrameDataParameter& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FrameDataParameter& default_instance();

  static inline const FrameDataParameter* internal_default_instance() {
    return reinterpret_cast<const FrameDataParameter*>(
               &_FrameDataParameter_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(FrameDataParameter* other);

  // implements Message ----------------------------------------------

  inline FrameDataParameter* New() const PROTOBUF_FINAL { return New(NULL); }

  FrameDataParameter* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FrameDataParameter& from);
  void MergeFrom(const FrameDataParameter& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FrameDataParameter* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string source = 1;
  bool has_source() const;
  void clear_source();
  static const int kSourceFieldNumber = 1;
  const ::std::string& source() const;
  void set_source(const ::std::string& value);
  #if LANG_CXX11
  void set_source(::std::string&& value);
  #endif
  void set_source(const char* value);
  void set_source(const char* value, size_t size);
  ::std::string* mutable_source();
  ::std::string* release_source();
  void set_allocated_source(::std::string* source);

  // required string pcd_path = 2;
  bool has_pcd_path() const;
  void clear_pcd_path();
  static const int kPcdPathFieldNumber = 2;
  const ::std::string& pcd_path() const;
  void set_pcd_path(const ::std::string& value);
  #if LANG_CXX11
  void set_pcd_path(::std::string&& value);
  #endif
  void set_pcd_path(const char* value);
  void set_pcd_path(const char* value, size_t size);
  ::std::string* mutable_pcd_path();
  ::std::string* release_pcd_path();
  void set_allocated_pcd_path(::std::string* pcd_path);

  // required string label_path = 3;
  bool has_label_path() const;
  void clear_label_path();
  static const int kLabelPathFieldNumber = 3;
  const ::std::string& label_path() const;
  void set_label_path(const ::std::string& value);
  #if LANG_CXX11
  void set_label_path(::std::string&& value);
  #endif
  void set_label_path(const char* value);
  void set_label_path(const char* value, size_t size);
  ::std::string* mutable_label_path();
  ::std::string* release_label_path();
  void set_allocated_label_path(::std::string* label_path);

  // optional float perturbation_rate = 5 [default = 0];
  bool has_perturbation_rate() const;
  void clear_perturbation_rate();
  static const int kPerturbationRateFieldNumber = 5;
  float perturbation_rate() const;
  void set_perturbation_rate(float value);

  // optional int32 buffer_size = 4 [default = 5];
  bool has_buffer_size() const;
  void clear_buffer_size();
  static const int kBufferSizeFieldNumber = 4;
  ::google::protobuf::int32 buffer_size() const;
  void set_buffer_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:smartseg.FrameDataParameter)
 private:
  void set_has_source();
  void clear_has_source();
  void set_has_pcd_path();
  void clear_has_pcd_path();
  void set_has_label_path();
  void clear_has_label_path();
  void set_has_buffer_size();
  void clear_has_buffer_size();
  void set_has_perturbation_rate();
  void clear_has_perturbation_rate();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr source_;
  ::google::protobuf::internal::ArenaStringPtr pcd_path_;
  ::google::protobuf::internal::ArenaStringPtr label_path_;
  float perturbation_rate_;
  ::google::protobuf::int32 buffer_size_;
  friend struct protobuf_caffe_5fsmartseg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FrameSequenceDataParameter : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:smartseg.FrameSequenceDataParameter) */ {
 public:
  FrameSequenceDataParameter();
  virtual ~FrameSequenceDataParameter();

  FrameSequenceDataParameter(const FrameSequenceDataParameter& from);

  inline FrameSequenceDataParameter& operator=(const FrameSequenceDataParameter& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FrameSequenceDataParameter& default_instance();

  static inline const FrameSequenceDataParameter* internal_default_instance() {
    return reinterpret_cast<const FrameSequenceDataParameter*>(
               &_FrameSequenceDataParameter_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(FrameSequenceDataParameter* other);

  // implements Message ----------------------------------------------

  inline FrameSequenceDataParameter* New() const PROTOBUF_FINAL { return New(NULL); }

  FrameSequenceDataParameter* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FrameSequenceDataParameter& from);
  void MergeFrom(const FrameSequenceDataParameter& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FrameSequenceDataParameter* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string source = 1;
  bool has_source() const;
  void clear_source();
  static const int kSourceFieldNumber = 1;
  const ::std::string& source() const;
  void set_source(const ::std::string& value);
  #if LANG_CXX11
  void set_source(::std::string&& value);
  #endif
  void set_source(const char* value);
  void set_source(const char* value, size_t size);
  ::std::string* mutable_source();
  ::std::string* release_source();
  void set_allocated_source(::std::string* source);

  // required string pcd_path = 2;
  bool has_pcd_path() const;
  void clear_pcd_path();
  static const int kPcdPathFieldNumber = 2;
  const ::std::string& pcd_path() const;
  void set_pcd_path(const ::std::string& value);
  #if LANG_CXX11
  void set_pcd_path(::std::string&& value);
  #endif
  void set_pcd_path(const char* value);
  void set_pcd_path(const char* value, size_t size);
  ::std::string* mutable_pcd_path();
  ::std::string* release_pcd_path();
  void set_allocated_pcd_path(::std::string* pcd_path);

  // required string label_path = 3;
  bool has_label_path() const;
  void clear_label_path();
  static const int kLabelPathFieldNumber = 3;
  const ::std::string& label_path() const;
  void set_label_path(const ::std::string& value);
  #if LANG_CXX11
  void set_label_path(::std::string&& value);
  #endif
  void set_label_path(const char* value);
  void set_label_path(const char* value, size_t size);
  ::std::string* mutable_label_path();
  ::std::string* release_label_path();
  void set_allocated_label_path(::std::string* label_path);

  // required string sequence_path = 4;
  bool has_sequence_path() const;
  void clear_sequence_path();
  static const int kSequencePathFieldNumber = 4;
  const ::std::string& sequence_path() const;
  void set_sequence_path(const ::std::string& value);
  #if LANG_CXX11
  void set_sequence_path(::std::string&& value);
  #endif
  void set_sequence_path(const char* value);
  void set_sequence_path(const char* value, size_t size);
  ::std::string* mutable_sequence_path();
  ::std::string* release_sequence_path();
  void set_allocated_sequence_path(::std::string* sequence_path);

  // required int32 num_frames = 5;
  bool has_num_frames() const;
  void clear_num_frames();
  static const int kNumFramesFieldNumber = 5;
  ::google::protobuf::int32 num_frames() const;
  void set_num_frames(::google::protobuf::int32 value);

  // optional float perturbation_rate = 8 [default = 0];
  bool has_perturbation_rate() const;
  void clear_perturbation_rate();
  static const int kPerturbationRateFieldNumber = 8;
  float perturbation_rate() const;
  void set_perturbation_rate(float value);

  // optional int32 step = 6 [default = 1];
  bool has_step() const;
  void clear_step();
  static const int kStepFieldNumber = 6;
  ::google::protobuf::int32 step() const;
  void set_step(::google::protobuf::int32 value);

  // optional int32 buffer_size = 7 [default = 5];
  bool has_buffer_size() const;
  void clear_buffer_size();
  static const int kBufferSizeFieldNumber = 7;
  ::google::protobuf::int32 buffer_size() const;
  void set_buffer_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:smartseg.FrameSequenceDataParameter)
 private:
  void set_has_source();
  void clear_has_source();
  void set_has_pcd_path();
  void clear_has_pcd_path();
  void set_has_label_path();
  void clear_has_label_path();
  void set_has_sequence_path();
  void clear_has_sequence_path();
  void set_has_num_frames();
  void clear_has_num_frames();
  void set_has_step();
  void clear_has_step();
  void set_has_buffer_size();
  void clear_has_buffer_size();
  void set_has_perturbation_rate();
  void clear_has_perturbation_rate();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr source_;
  ::google::protobuf::internal::ArenaStringPtr pcd_path_;
  ::google::protobuf::internal::ArenaStringPtr label_path_;
  ::google::protobuf::internal::ArenaStringPtr sequence_path_;
  ::google::protobuf::int32 num_frames_;
  float perturbation_rate_;
  ::google::protobuf::int32 step_;
  ::google::protobuf::int32 buffer_size_;
  friend struct protobuf_caffe_5fsmartseg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BlobVisualizeParameter : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:smartseg.BlobVisualizeParameter) */ {
 public:
  BlobVisualizeParameter();
  virtual ~BlobVisualizeParameter();

  BlobVisualizeParameter(const BlobVisualizeParameter& from);

  inline BlobVisualizeParameter& operator=(const BlobVisualizeParameter& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BlobVisualizeParameter& default_instance();

  static inline const BlobVisualizeParameter* internal_default_instance() {
    return reinterpret_cast<const BlobVisualizeParameter*>(
               &_BlobVisualizeParameter_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(BlobVisualizeParameter* other);

  // implements Message ----------------------------------------------

  inline BlobVisualizeParameter* New() const PROTOBUF_FINAL { return New(NULL); }

  BlobVisualizeParameter* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BlobVisualizeParameter& from);
  void MergeFrom(const BlobVisualizeParameter& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BlobVisualizeParameter* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string name = 1 [default = "visualize"];
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional float lower_bound = 2 [default = 0];
  bool has_lower_bound() const;
  void clear_lower_bound();
  static const int kLowerBoundFieldNumber = 2;
  float lower_bound() const;
  void set_lower_bound(float value);

  // optional float ignore_value = 4 [default = 0];
  bool has_ignore_value() const;
  void clear_ignore_value();
  static const int kIgnoreValueFieldNumber = 4;
  float ignore_value() const;
  void set_ignore_value(float value);

  // optional int32 channel = 5 [default = 0];
  bool has_channel() const;
  void clear_channel();
  static const int kChannelFieldNumber = 5;
  ::google::protobuf::int32 channel() const;
  void set_channel(::google::protobuf::int32 value);

  // optional float upper_bound = 3 [default = 1];
  bool has_upper_bound() const;
  void clear_upper_bound();
  static const int kUpperBoundFieldNumber = 3;
  float upper_bound() const;
  void set_upper_bound(float value);

  // @@protoc_insertion_point(class_scope:smartseg.BlobVisualizeParameter)
 private:
  void set_has_name();
  void clear_has_name();
  void set_has_lower_bound();
  void clear_has_lower_bound();
  void set_has_upper_bound();
  void clear_has_upper_bound();
  void set_has_ignore_value();
  void clear_has_ignore_value();
  void set_has_channel();
  void clear_has_channel();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  static ::google::protobuf::internal::ExplicitlyConstructed< ::std::string> _default_name_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  float lower_bound_;
  float ignore_value_;
  ::google::protobuf::int32 channel_;
  float upper_bound_;
  friend struct protobuf_caffe_5fsmartseg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlanViewParameter : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:smartseg.PlanViewParameter) */ {
 public:
  PlanViewParameter();
  virtual ~PlanViewParameter();

  PlanViewParameter(const PlanViewParameter& from);

  inline PlanViewParameter& operator=(const PlanViewParameter& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlanViewParameter& default_instance();

  static inline const PlanViewParameter* internal_default_instance() {
    return reinterpret_cast<const PlanViewParameter*>(
               &_PlanViewParameter_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(PlanViewParameter* other);

  // implements Message ----------------------------------------------

  inline PlanViewParameter* New() const PROTOBUF_FINAL { return New(NULL); }

  PlanViewParameter* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlanViewParameter& from);
  void MergeFrom(const PlanViewParameter& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlanViewParameter* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required float range = 1;
  bool has_range() const;
  void clear_range();
  static const int kRangeFieldNumber = 1;
  float range() const;
  void set_range(float value);

  // required int32 splits = 2;
  bool has_splits() const;
  void clear_splits();
  static const int kSplitsFieldNumber = 2;
  ::google::protobuf::int32 splits() const;
  void set_splits(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:smartseg.PlanViewParameter)
 private:
  void set_has_range();
  void clear_has_range();
  void set_has_splits();
  void clear_has_splits();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  float range_;
  ::google::protobuf::int32 splits_;
  friend struct protobuf_caffe_5fsmartseg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlanViewExtractorParameter : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:smartseg.PlanViewExtractorParameter) */ {
 public:
  PlanViewExtractorParameter();
  virtual ~PlanViewExtractorParameter();

  PlanViewExtractorParameter(const PlanViewExtractorParameter& from);

  inline PlanViewExtractorParameter& operator=(const PlanViewExtractorParameter& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlanViewExtractorParameter& default_instance();

  static inline const PlanViewExtractorParameter* internal_default_instance() {
    return reinterpret_cast<const PlanViewExtractorParameter*>(
               &_PlanViewExtractorParameter_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(PlanViewExtractorParameter* other);

  // implements Message ----------------------------------------------

  inline PlanViewExtractorParameter* New() const PROTOBUF_FINAL { return New(NULL); }

  PlanViewExtractorParameter* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlanViewExtractorParameter& from);
  void MergeFrom(const PlanViewExtractorParameter& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlanViewExtractorParameter* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required float filter_min_z = 1;
  bool has_filter_min_z() const;
  void clear_filter_min_z();
  static const int kFilterMinZFieldNumber = 1;
  float filter_min_z() const;
  void set_filter_min_z(float value);

  // required float filter_max_z = 2;
  bool has_filter_max_z() const;
  void clear_filter_max_z();
  static const int kFilterMaxZFieldNumber = 2;
  float filter_max_z() const;
  void set_filter_max_z(float value);

  // optional float shift_z = 3 [default = 0];
  bool has_shift_z() const;
  void clear_shift_z();
  static const int kShiftZFieldNumber = 3;
  float shift_z() const;
  void set_shift_z(float value);

  // @@protoc_insertion_point(class_scope:smartseg.PlanViewExtractorParameter)
 private:
  void set_has_filter_min_z();
  void clear_has_filter_min_z();
  void set_has_filter_max_z();
  void clear_has_filter_max_z();
  void set_has_shift_z();
  void clear_has_shift_z();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  float filter_min_z_;
  float filter_max_z_;
  float shift_z_;
  friend struct protobuf_caffe_5fsmartseg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HorizontalViewParameter : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:smartseg.HorizontalViewParameter) */ {
 public:
  HorizontalViewParameter();
  virtual ~HorizontalViewParameter();

  HorizontalViewParameter(const HorizontalViewParameter& from);

  inline HorizontalViewParameter& operator=(const HorizontalViewParameter& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HorizontalViewParameter& default_instance();

  static inline const HorizontalViewParameter* internal_default_instance() {
    return reinterpret_cast<const HorizontalViewParameter*>(
               &_HorizontalViewParameter_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(HorizontalViewParameter* other);

  // implements Message ----------------------------------------------

  inline HorizontalViewParameter* New() const PROTOBUF_FINAL { return New(NULL); }

  HorizontalViewParameter* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HorizontalViewParameter& from);
  void MergeFrom(const HorizontalViewParameter& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HorizontalViewParameter* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required float lower_pitch = 1;
  bool has_lower_pitch() const;
  void clear_lower_pitch();
  static const int kLowerPitchFieldNumber = 1;
  float lower_pitch() const;
  void set_lower_pitch(float value);

  // required float upper_pitch = 2;
  bool has_upper_pitch() const;
  void clear_upper_pitch();
  static const int kUpperPitchFieldNumber = 2;
  float upper_pitch() const;
  void set_upper_pitch(float value);

  // required int32 rows = 3;
  bool has_rows() const;
  void clear_rows();
  static const int kRowsFieldNumber = 3;
  ::google::protobuf::int32 rows() const;
  void set_rows(::google::protobuf::int32 value);

  // required int32 cols = 4;
  bool has_cols() const;
  void clear_cols();
  static const int kColsFieldNumber = 4;
  ::google::protobuf::int32 cols() const;
  void set_cols(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:smartseg.HorizontalViewParameter)
 private:
  void set_has_lower_pitch();
  void clear_has_lower_pitch();
  void set_has_upper_pitch();
  void clear_has_upper_pitch();
  void set_has_rows();
  void clear_has_rows();
  void set_has_cols();
  void clear_has_cols();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  float lower_pitch_;
  float upper_pitch_;
  ::google::protobuf::int32 rows_;
  ::google::protobuf::int32 cols_;
  friend struct protobuf_caffe_5fsmartseg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HorizontalViewExtractorParameter : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:smartseg.HorizontalViewExtractorParameter) */ {
 public:
  HorizontalViewExtractorParameter();
  virtual ~HorizontalViewExtractorParameter();

  HorizontalViewExtractorParameter(const HorizontalViewExtractorParameter& from);

  inline HorizontalViewExtractorParameter& operator=(const HorizontalViewExtractorParameter& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HorizontalViewExtractorParameter& default_instance();

  static inline const HorizontalViewExtractorParameter* internal_default_instance() {
    return reinterpret_cast<const HorizontalViewExtractorParameter*>(
               &_HorizontalViewExtractorParameter_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(HorizontalViewExtractorParameter* other);

  // implements Message ----------------------------------------------

  inline HorizontalViewExtractorParameter* New() const PROTOBUF_FINAL { return New(NULL); }

  HorizontalViewExtractorParameter* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HorizontalViewExtractorParameter& from);
  void MergeFrom(const HorizontalViewExtractorParameter& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HorizontalViewExtractorParameter* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:smartseg.HorizontalViewExtractorParameter)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct protobuf_caffe_5fsmartseg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SideViewParameter : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:smartseg.SideViewParameter) */ {
 public:
  SideViewParameter();
  virtual ~SideViewParameter();

  SideViewParameter(const SideViewParameter& from);

  inline SideViewParameter& operator=(const SideViewParameter& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SideViewParameter& default_instance();

  static inline const SideViewParameter* internal_default_instance() {
    return reinterpret_cast<const SideViewParameter*>(
               &_SideViewParameter_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(SideViewParameter* other);

  // implements Message ----------------------------------------------

  inline SideViewParameter* New() const PROTOBUF_FINAL { return New(NULL); }

  SideViewParameter* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SideViewParameter& from);
  void MergeFrom(const SideViewParameter& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SideViewParameter* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required float range = 1;
  bool has_range() const;
  void clear_range();
  static const int kRangeFieldNumber = 1;
  float range() const;
  void set_range(float value);

  // required int32 splits = 2;
  bool has_splits() const;
  void clear_splits();
  static const int kSplitsFieldNumber = 2;
  ::google::protobuf::int32 splits() const;
  void set_splits(::google::protobuf::int32 value);

  // required int32 side = 3;
  bool has_side() const;
  void clear_side();
  static const int kSideFieldNumber = 3;
  ::google::protobuf::int32 side() const;
  void set_side(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:smartseg.SideViewParameter)
 private:
  void set_has_range();
  void clear_has_range();
  void set_has_splits();
  void clear_has_splits();
  void set_has_side();
  void clear_has_side();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  float range_;
  ::google::protobuf::int32 splits_;
  ::google::protobuf::int32 side_;
  friend struct protobuf_caffe_5fsmartseg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SideViewExtractorParameter : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:smartseg.SideViewExtractorParameter) */ {
 public:
  SideViewExtractorParameter();
  virtual ~SideViewExtractorParameter();

  SideViewExtractorParameter(const SideViewExtractorParameter& from);

  inline SideViewExtractorParameter& operator=(const SideViewExtractorParameter& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SideViewExtractorParameter& default_instance();

  static inline const SideViewExtractorParameter* internal_default_instance() {
    return reinterpret_cast<const SideViewExtractorParameter*>(
               &_SideViewExtractorParameter_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(SideViewExtractorParameter* other);

  // implements Message ----------------------------------------------

  inline SideViewExtractorParameter* New() const PROTOBUF_FINAL { return New(NULL); }

  SideViewExtractorParameter* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SideViewExtractorParameter& from);
  void MergeFrom(const SideViewExtractorParameter& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SideViewExtractorParameter* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:smartseg.SideViewExtractorParameter)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct protobuf_caffe_5fsmartseg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SegmentorParameter : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:smartseg.SegmentorParameter) */ {
 public:
  SegmentorParameter();
  virtual ~SegmentorParameter();

  SegmentorParameter(const SegmentorParameter& from);

  inline SegmentorParameter& operator=(const SegmentorParameter& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SegmentorParameter& default_instance();

  static inline const SegmentorParameter* internal_default_instance() {
    return reinterpret_cast<const SegmentorParameter*>(
               &_SegmentorParameter_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(SegmentorParameter* other);

  // implements Message ----------------------------------------------

  inline SegmentorParameter* New() const PROTOBUF_FINAL { return New(NULL); }

  SegmentorParameter* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SegmentorParameter& from);
  void MergeFrom(const SegmentorParameter& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SegmentorParameter* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool training_mode = 1 [default = false];
  bool has_training_mode() const;
  void clear_training_mode();
  static const int kTrainingModeFieldNumber = 1;
  bool training_mode() const;
  void set_training_mode(bool value);

  // optional bool merge_diagonal_grids = 2 [default = false];
  bool has_merge_diagonal_grids() const;
  void clear_merge_diagonal_grids();
  static const int kMergeDiagonalGridsFieldNumber = 2;
  bool merge_diagonal_grids() const;
  void set_merge_diagonal_grids(bool value);

  // optional bool find_best_cut = 3 [default = false];
  bool has_find_best_cut() const;
  void clear_find_best_cut();
  static const int kFindBestCutFieldNumber = 3;
  bool find_best_cut() const;
  void set_find_best_cut(bool value);

  // optional float topz_threshold = 4 [default = -1];
  bool has_topz_threshold() const;
  void clear_topz_threshold();
  static const int kTopzThresholdFieldNumber = 4;
  float topz_threshold() const;
  void set_topz_threshold(float value);

  // @@protoc_insertion_point(class_scope:smartseg.SegmentorParameter)
 private:
  void set_has_training_mode();
  void clear_has_training_mode();
  void set_has_merge_diagonal_grids();
  void clear_has_merge_diagonal_grids();
  void set_has_find_best_cut();
  void clear_has_find_best_cut();
  void set_has_topz_threshold();
  void clear_has_topz_threshold();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool training_mode_;
  bool merge_diagonal_grids_;
  bool find_best_cut_;
  float topz_threshold_;
  friend struct protobuf_caffe_5fsmartseg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FrameTargetParameter : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:smartseg.FrameTargetParameter) */ {
 public:
  FrameTargetParameter();
  virtual ~FrameTargetParameter();

  FrameTargetParameter(const FrameTargetParameter& from);

  inline FrameTargetParameter& operator=(const FrameTargetParameter& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FrameTargetParameter& default_instance();

  static inline const FrameTargetParameter* internal_default_instance() {
    return reinterpret_cast<const FrameTargetParameter*>(
               &_FrameTargetParameter_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(FrameTargetParameter* other);

  // implements Message ----------------------------------------------

  inline FrameTargetParameter* New() const PROTOBUF_FINAL { return New(NULL); }

  FrameTargetParameter* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FrameTargetParameter& from);
  void MergeFrom(const FrameTargetParameter& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FrameTargetParameter* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 startup_iter = 1 [default = 0];
  bool has_startup_iter() const;
  void clear_startup_iter();
  static const int kStartupIterFieldNumber = 1;
  ::google::protobuf::int32 startup_iter() const;
  void set_startup_iter(::google::protobuf::int32 value);

  // optional float max_center_norm = 2 [default = 0];
  bool has_max_center_norm() const;
  void clear_max_center_norm();
  static const int kMaxCenterNormFieldNumber = 2;
  float max_center_norm() const;
  void set_max_center_norm(float value);

  // optional bool equal_objectness_weight = 3 [default = false];
  bool has_equal_objectness_weight() const;
  void clear_equal_objectness_weight();
  static const int kEqualObjectnessWeightFieldNumber = 3;
  bool equal_objectness_weight() const;
  void set_equal_objectness_weight(bool value);

  // optional bool point_center = 4 [default = false];
  bool has_point_center() const;
  void clear_point_center();
  static const int kPointCenterFieldNumber = 4;
  bool point_center() const;
  void set_point_center(bool value);

  // optional bool sample_grid_center = 5 [default = false];
  bool has_sample_grid_center() const;
  void clear_sample_grid_center();
  static const int kSampleGridCenterFieldNumber = 5;
  bool sample_grid_center() const;
  void set_sample_grid_center(bool value);

  // @@protoc_insertion_point(class_scope:smartseg.FrameTargetParameter)
 private:
  void set_has_startup_iter();
  void clear_has_startup_iter();
  void set_has_max_center_norm();
  void clear_has_max_center_norm();
  void set_has_equal_objectness_weight();
  void clear_has_equal_objectness_weight();
  void set_has_point_center();
  void clear_has_point_center();
  void set_has_sample_grid_center();
  void clear_has_sample_grid_center();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 startup_iter_;
  float max_center_norm_;
  bool equal_objectness_weight_;
  bool point_center_;
  bool sample_grid_center_;
  friend struct protobuf_caffe_5fsmartseg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ViewPoolingParameter : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:smartseg.ViewPoolingParameter) */ {
 public:
  ViewPoolingParameter();
  virtual ~ViewPoolingParameter();

  ViewPoolingParameter(const ViewPoolingParameter& from);

  inline ViewPoolingParameter& operator=(const ViewPoolingParameter& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ViewPoolingParameter& default_instance();

  static inline const ViewPoolingParameter* internal_default_instance() {
    return reinterpret_cast<const ViewPoolingParameter*>(
               &_ViewPoolingParameter_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(ViewPoolingParameter* other);

  // implements Message ----------------------------------------------

  inline ViewPoolingParameter* New() const PROTOBUF_FINAL { return New(NULL); }

  ViewPoolingParameter* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ViewPoolingParameter& from);
  void MergeFrom(const ViewPoolingParameter& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ViewPoolingParameter* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:smartseg.ViewPoolingParameter)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct protobuf_caffe_5fsmartseg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ViewUnpoolingParameter : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:smartseg.ViewUnpoolingParameter) */ {
 public:
  ViewUnpoolingParameter();
  virtual ~ViewUnpoolingParameter();

  ViewUnpoolingParameter(const ViewUnpoolingParameter& from);

  inline ViewUnpoolingParameter& operator=(const ViewUnpoolingParameter& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ViewUnpoolingParameter& default_instance();

  static inline const ViewUnpoolingParameter* internal_default_instance() {
    return reinterpret_cast<const ViewUnpoolingParameter*>(
               &_ViewUnpoolingParameter_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(ViewUnpoolingParameter* other);

  // implements Message ----------------------------------------------

  inline ViewUnpoolingParameter* New() const PROTOBUF_FINAL { return New(NULL); }

  ViewUnpoolingParameter* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ViewUnpoolingParameter& from);
  void MergeFrom(const ViewUnpoolingParameter& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ViewUnpoolingParameter* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:smartseg.ViewUnpoolingParameter)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct protobuf_caffe_5fsmartseg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PointInterpolationParameter : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:smartseg.PointInterpolationParameter) */ {
 public:
  PointInterpolationParameter();
  virtual ~PointInterpolationParameter();

  PointInterpolationParameter(const PointInterpolationParameter& from);

  inline PointInterpolationParameter& operator=(const PointInterpolationParameter& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PointInterpolationParameter& default_instance();

  static inline const PointInterpolationParameter* internal_default_instance() {
    return reinterpret_cast<const PointInterpolationParameter*>(
               &_PointInterpolationParameter_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(PointInterpolationParameter* other);

  // implements Message ----------------------------------------------

  inline PointInterpolationParameter* New() const PROTOBUF_FINAL { return New(NULL); }

  PointInterpolationParameter* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PointInterpolationParameter& from);
  void MergeFrom(const PointInterpolationParameter& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PointInterpolationParameter* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:smartseg.PointInterpolationParameter)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct protobuf_caffe_5fsmartseg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class OnlineNormParameter : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:smartseg.OnlineNormParameter) */ {
 public:
  OnlineNormParameter();
  virtual ~OnlineNormParameter();

  OnlineNormParameter(const OnlineNormParameter& from);

  inline OnlineNormParameter& operator=(const OnlineNormParameter& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OnlineNormParameter& default_instance();

  static inline const OnlineNormParameter* internal_default_instance() {
    return reinterpret_cast<const OnlineNormParameter*>(
               &_OnlineNormParameter_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(OnlineNormParameter* other);

  // implements Message ----------------------------------------------

  inline OnlineNormParameter* New() const PROTOBUF_FINAL { return New(NULL); }

  OnlineNormParameter* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OnlineNormParameter& from);
  void MergeFrom(const OnlineNormParameter& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OnlineNormParameter* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required float iters = 1;
  bool has_iters() const;
  void clear_iters();
  static const int kItersFieldNumber = 1;
  float iters() const;
  void set_iters(float value);

  // optional float moving_average_fraction = 2 [default = 0.999];
  bool has_moving_average_fraction() const;
  void clear_moving_average_fraction();
  static const int kMovingAverageFractionFieldNumber = 2;
  float moving_average_fraction() const;
  void set_moving_average_fraction(float value);

  // optional float eps = 3 [default = 1e-05];
  bool has_eps() const;
  void clear_eps();
  static const int kEpsFieldNumber = 3;
  float eps() const;
  void set_eps(float value);

  // @@protoc_insertion_point(class_scope:smartseg.OnlineNormParameter)
 private:
  void set_has_iters();
  void clear_has_iters();
  void set_has_moving_average_fraction();
  void clear_has_moving_average_fraction();
  void set_has_eps();
  void clear_has_eps();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  float iters_;
  float moving_average_fraction_;
  float eps_;
  friend struct protobuf_caffe_5fsmartseg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DilationParameter : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:smartseg.DilationParameter) */ {
 public:
  DilationParameter();
  virtual ~DilationParameter();

  DilationParameter(const DilationParameter& from);

  inline DilationParameter& operator=(const DilationParameter& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DilationParameter& default_instance();

  static inline const DilationParameter* internal_default_instance() {
    return reinterpret_cast<const DilationParameter*>(
               &_DilationParameter_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void Swap(DilationParameter* other);

  // implements Message ----------------------------------------------

  inline DilationParameter* New() const PROTOBUF_FINAL { return New(NULL); }

  DilationParameter* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DilationParameter& from);
  void MergeFrom(const DilationParameter& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DilationParameter* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef DilationParameter_Method Method;
  static const Method CLOSEST =
    DilationParameter_Method_CLOSEST;
  static const Method MEAN =
    DilationParameter_Method_MEAN;
  static inline bool Method_IsValid(int value) {
    return DilationParameter_Method_IsValid(value);
  }
  static const Method Method_MIN =
    DilationParameter_Method_Method_MIN;
  static const Method Method_MAX =
    DilationParameter_Method_Method_MAX;
  static const int Method_ARRAYSIZE =
    DilationParameter_Method_Method_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Method_descriptor() {
    return DilationParameter_Method_descriptor();
  }
  static inline const ::std::string& Method_Name(Method value) {
    return DilationParameter_Method_Name(value);
  }
  static inline bool Method_Parse(const ::std::string& name,
      Method* value) {
    return DilationParameter_Method_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .smartseg.DilationParameter.Method method = 1;
  bool has_method() const;
  void clear_method();
  static const int kMethodFieldNumber = 1;
  ::smartseg::DilationParameter_Method method() const;
  void set_method(::smartseg::DilationParameter_Method value);

  // required int32 nonempty_channel = 2;
  bool has_nonempty_channel() const;
  void clear_nonempty_channel();
  static const int kNonemptyChannelFieldNumber = 2;
  ::google::protobuf::int32 nonempty_channel() const;
  void set_nonempty_channel(::google::protobuf::int32 value);

  // required int32 feature_channel = 3;
  bool has_feature_channel() const;
  void clear_feature_channel();
  static const int kFeatureChannelFieldNumber = 3;
  ::google::protobuf::int32 feature_channel() const;
  void set_feature_channel(::google::protobuf::int32 value);

  // required int32 steps = 4;
  bool has_steps() const;
  void clear_steps();
  static const int kStepsFieldNumber = 4;
  ::google::protobuf::int32 steps() const;
  void set_steps(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:smartseg.DilationParameter)
 private:
  void set_has_method();
  void clear_has_method();
  void set_has_nonempty_channel();
  void clear_has_nonempty_channel();
  void set_has_feature_channel();
  void clear_has_feature_channel();
  void set_has_steps();
  void clear_has_steps();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  int method_;
  ::google::protobuf::int32 nonempty_channel_;
  ::google::protobuf::int32 feature_channel_;
  ::google::protobuf::int32 steps_;
  friend struct protobuf_caffe_5fsmartseg_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// ConfigParameter

// optional int32 max_points = 1 [default = 250000];
inline bool ConfigParameter::has_max_points() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ConfigParameter::set_has_max_points() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ConfigParameter::clear_has_max_points() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ConfigParameter::clear_max_points() {
  max_points_ = 250000;
  clear_has_max_points();
}
inline ::google::protobuf::int32 ConfigParameter::max_points() const {
  // @@protoc_insertion_point(field_get:smartseg.ConfigParameter.max_points)
  return max_points_;
}
inline void ConfigParameter::set_max_points(::google::protobuf::int32 value) {
  set_has_max_points();
  max_points_ = value;
  // @@protoc_insertion_point(field_set:smartseg.ConfigParameter.max_points)
}

// repeated string class_name = 2;
inline int ConfigParameter::class_name_size() const {
  return class_name_.size();
}
inline void ConfigParameter::clear_class_name() {
  class_name_.Clear();
}
inline const ::std::string& ConfigParameter::class_name(int index) const {
  // @@protoc_insertion_point(field_get:smartseg.ConfigParameter.class_name)
  return class_name_.Get(index);
}
inline ::std::string* ConfigParameter::mutable_class_name(int index) {
  // @@protoc_insertion_point(field_mutable:smartseg.ConfigParameter.class_name)
  return class_name_.Mutable(index);
}
inline void ConfigParameter::set_class_name(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:smartseg.ConfigParameter.class_name)
  class_name_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void ConfigParameter::set_class_name(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:smartseg.ConfigParameter.class_name)
  class_name_.Mutable(index)->assign(std::move(value));
}
#endif
inline void ConfigParameter::set_class_name(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  class_name_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:smartseg.ConfigParameter.class_name)
}
inline void ConfigParameter::set_class_name(int index, const char* value, size_t size) {
  class_name_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:smartseg.ConfigParameter.class_name)
}
inline ::std::string* ConfigParameter::add_class_name() {
  // @@protoc_insertion_point(field_add_mutable:smartseg.ConfigParameter.class_name)
  return class_name_.Add();
}
inline void ConfigParameter::add_class_name(const ::std::string& value) {
  class_name_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:smartseg.ConfigParameter.class_name)
}
#if LANG_CXX11
inline void ConfigParameter::add_class_name(::std::string&& value) {
  class_name_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:smartseg.ConfigParameter.class_name)
}
#endif
inline void ConfigParameter::add_class_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  class_name_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:smartseg.ConfigParameter.class_name)
}
inline void ConfigParameter::add_class_name(const char* value, size_t size) {
  class_name_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:smartseg.ConfigParameter.class_name)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ConfigParameter::class_name() const {
  // @@protoc_insertion_point(field_list:smartseg.ConfigParameter.class_name)
  return class_name_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ConfigParameter::mutable_class_name() {
  // @@protoc_insertion_point(field_mutable_list:smartseg.ConfigParameter.class_name)
  return &class_name_;
}

// repeated bool class_orientation = 3;
inline int ConfigParameter::class_orientation_size() const {
  return class_orientation_.size();
}
inline void ConfigParameter::clear_class_orientation() {
  class_orientation_.Clear();
}
inline bool ConfigParameter::class_orientation(int index) const {
  // @@protoc_insertion_point(field_get:smartseg.ConfigParameter.class_orientation)
  return class_orientation_.Get(index);
}
inline void ConfigParameter::set_class_orientation(int index, bool value) {
  class_orientation_.Set(index, value);
  // @@protoc_insertion_point(field_set:smartseg.ConfigParameter.class_orientation)
}
inline void ConfigParameter::add_class_orientation(bool value) {
  class_orientation_.Add(value);
  // @@protoc_insertion_point(field_add:smartseg.ConfigParameter.class_orientation)
}
inline const ::google::protobuf::RepeatedField< bool >&
ConfigParameter::class_orientation() const {
  // @@protoc_insertion_point(field_list:smartseg.ConfigParameter.class_orientation)
  return class_orientation_;
}
inline ::google::protobuf::RepeatedField< bool >*
ConfigParameter::mutable_class_orientation() {
  // @@protoc_insertion_point(field_mutable_list:smartseg.ConfigParameter.class_orientation)
  return &class_orientation_;
}

// -------------------------------------------------------------------

// FrameDataParameter

// required string source = 1;
inline bool FrameDataParameter::has_source() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FrameDataParameter::set_has_source() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FrameDataParameter::clear_has_source() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FrameDataParameter::clear_source() {
  source_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_source();
}
inline const ::std::string& FrameDataParameter::source() const {
  // @@protoc_insertion_point(field_get:smartseg.FrameDataParameter.source)
  return source_.GetNoArena();
}
inline void FrameDataParameter::set_source(const ::std::string& value) {
  set_has_source();
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:smartseg.FrameDataParameter.source)
}
#if LANG_CXX11
inline void FrameDataParameter::set_source(::std::string&& value) {
  set_has_source();
  source_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:smartseg.FrameDataParameter.source)
}
#endif
inline void FrameDataParameter::set_source(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_source();
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:smartseg.FrameDataParameter.source)
}
inline void FrameDataParameter::set_source(const char* value, size_t size) {
  set_has_source();
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:smartseg.FrameDataParameter.source)
}
inline ::std::string* FrameDataParameter::mutable_source() {
  set_has_source();
  // @@protoc_insertion_point(field_mutable:smartseg.FrameDataParameter.source)
  return source_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FrameDataParameter::release_source() {
  // @@protoc_insertion_point(field_release:smartseg.FrameDataParameter.source)
  clear_has_source();
  return source_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FrameDataParameter::set_allocated_source(::std::string* source) {
  if (source != NULL) {
    set_has_source();
  } else {
    clear_has_source();
  }
  source_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), source);
  // @@protoc_insertion_point(field_set_allocated:smartseg.FrameDataParameter.source)
}

// required string pcd_path = 2;
inline bool FrameDataParameter::has_pcd_path() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FrameDataParameter::set_has_pcd_path() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FrameDataParameter::clear_has_pcd_path() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FrameDataParameter::clear_pcd_path() {
  pcd_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_pcd_path();
}
inline const ::std::string& FrameDataParameter::pcd_path() const {
  // @@protoc_insertion_point(field_get:smartseg.FrameDataParameter.pcd_path)
  return pcd_path_.GetNoArena();
}
inline void FrameDataParameter::set_pcd_path(const ::std::string& value) {
  set_has_pcd_path();
  pcd_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:smartseg.FrameDataParameter.pcd_path)
}
#if LANG_CXX11
inline void FrameDataParameter::set_pcd_path(::std::string&& value) {
  set_has_pcd_path();
  pcd_path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:smartseg.FrameDataParameter.pcd_path)
}
#endif
inline void FrameDataParameter::set_pcd_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_pcd_path();
  pcd_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:smartseg.FrameDataParameter.pcd_path)
}
inline void FrameDataParameter::set_pcd_path(const char* value, size_t size) {
  set_has_pcd_path();
  pcd_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:smartseg.FrameDataParameter.pcd_path)
}
inline ::std::string* FrameDataParameter::mutable_pcd_path() {
  set_has_pcd_path();
  // @@protoc_insertion_point(field_mutable:smartseg.FrameDataParameter.pcd_path)
  return pcd_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FrameDataParameter::release_pcd_path() {
  // @@protoc_insertion_point(field_release:smartseg.FrameDataParameter.pcd_path)
  clear_has_pcd_path();
  return pcd_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FrameDataParameter::set_allocated_pcd_path(::std::string* pcd_path) {
  if (pcd_path != NULL) {
    set_has_pcd_path();
  } else {
    clear_has_pcd_path();
  }
  pcd_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pcd_path);
  // @@protoc_insertion_point(field_set_allocated:smartseg.FrameDataParameter.pcd_path)
}

// required string label_path = 3;
inline bool FrameDataParameter::has_label_path() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FrameDataParameter::set_has_label_path() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FrameDataParameter::clear_has_label_path() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FrameDataParameter::clear_label_path() {
  label_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_label_path();
}
inline const ::std::string& FrameDataParameter::label_path() const {
  // @@protoc_insertion_point(field_get:smartseg.FrameDataParameter.label_path)
  return label_path_.GetNoArena();
}
inline void FrameDataParameter::set_label_path(const ::std::string& value) {
  set_has_label_path();
  label_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:smartseg.FrameDataParameter.label_path)
}
#if LANG_CXX11
inline void FrameDataParameter::set_label_path(::std::string&& value) {
  set_has_label_path();
  label_path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:smartseg.FrameDataParameter.label_path)
}
#endif
inline void FrameDataParameter::set_label_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_label_path();
  label_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:smartseg.FrameDataParameter.label_path)
}
inline void FrameDataParameter::set_label_path(const char* value, size_t size) {
  set_has_label_path();
  label_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:smartseg.FrameDataParameter.label_path)
}
inline ::std::string* FrameDataParameter::mutable_label_path() {
  set_has_label_path();
  // @@protoc_insertion_point(field_mutable:smartseg.FrameDataParameter.label_path)
  return label_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FrameDataParameter::release_label_path() {
  // @@protoc_insertion_point(field_release:smartseg.FrameDataParameter.label_path)
  clear_has_label_path();
  return label_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FrameDataParameter::set_allocated_label_path(::std::string* label_path) {
  if (label_path != NULL) {
    set_has_label_path();
  } else {
    clear_has_label_path();
  }
  label_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), label_path);
  // @@protoc_insertion_point(field_set_allocated:smartseg.FrameDataParameter.label_path)
}

// optional int32 buffer_size = 4 [default = 5];
inline bool FrameDataParameter::has_buffer_size() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void FrameDataParameter::set_has_buffer_size() {
  _has_bits_[0] |= 0x00000010u;
}
inline void FrameDataParameter::clear_has_buffer_size() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void FrameDataParameter::clear_buffer_size() {
  buffer_size_ = 5;
  clear_has_buffer_size();
}
inline ::google::protobuf::int32 FrameDataParameter::buffer_size() const {
  // @@protoc_insertion_point(field_get:smartseg.FrameDataParameter.buffer_size)
  return buffer_size_;
}
inline void FrameDataParameter::set_buffer_size(::google::protobuf::int32 value) {
  set_has_buffer_size();
  buffer_size_ = value;
  // @@protoc_insertion_point(field_set:smartseg.FrameDataParameter.buffer_size)
}

// optional float perturbation_rate = 5 [default = 0];
inline bool FrameDataParameter::has_perturbation_rate() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FrameDataParameter::set_has_perturbation_rate() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FrameDataParameter::clear_has_perturbation_rate() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FrameDataParameter::clear_perturbation_rate() {
  perturbation_rate_ = 0;
  clear_has_perturbation_rate();
}
inline float FrameDataParameter::perturbation_rate() const {
  // @@protoc_insertion_point(field_get:smartseg.FrameDataParameter.perturbation_rate)
  return perturbation_rate_;
}
inline void FrameDataParameter::set_perturbation_rate(float value) {
  set_has_perturbation_rate();
  perturbation_rate_ = value;
  // @@protoc_insertion_point(field_set:smartseg.FrameDataParameter.perturbation_rate)
}

// -------------------------------------------------------------------

// FrameSequenceDataParameter

// required string source = 1;
inline bool FrameSequenceDataParameter::has_source() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FrameSequenceDataParameter::set_has_source() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FrameSequenceDataParameter::clear_has_source() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FrameSequenceDataParameter::clear_source() {
  source_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_source();
}
inline const ::std::string& FrameSequenceDataParameter::source() const {
  // @@protoc_insertion_point(field_get:smartseg.FrameSequenceDataParameter.source)
  return source_.GetNoArena();
}
inline void FrameSequenceDataParameter::set_source(const ::std::string& value) {
  set_has_source();
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:smartseg.FrameSequenceDataParameter.source)
}
#if LANG_CXX11
inline void FrameSequenceDataParameter::set_source(::std::string&& value) {
  set_has_source();
  source_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:smartseg.FrameSequenceDataParameter.source)
}
#endif
inline void FrameSequenceDataParameter::set_source(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_source();
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:smartseg.FrameSequenceDataParameter.source)
}
inline void FrameSequenceDataParameter::set_source(const char* value, size_t size) {
  set_has_source();
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:smartseg.FrameSequenceDataParameter.source)
}
inline ::std::string* FrameSequenceDataParameter::mutable_source() {
  set_has_source();
  // @@protoc_insertion_point(field_mutable:smartseg.FrameSequenceDataParameter.source)
  return source_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FrameSequenceDataParameter::release_source() {
  // @@protoc_insertion_point(field_release:smartseg.FrameSequenceDataParameter.source)
  clear_has_source();
  return source_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FrameSequenceDataParameter::set_allocated_source(::std::string* source) {
  if (source != NULL) {
    set_has_source();
  } else {
    clear_has_source();
  }
  source_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), source);
  // @@protoc_insertion_point(field_set_allocated:smartseg.FrameSequenceDataParameter.source)
}

// required string pcd_path = 2;
inline bool FrameSequenceDataParameter::has_pcd_path() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FrameSequenceDataParameter::set_has_pcd_path() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FrameSequenceDataParameter::clear_has_pcd_path() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FrameSequenceDataParameter::clear_pcd_path() {
  pcd_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_pcd_path();
}
inline const ::std::string& FrameSequenceDataParameter::pcd_path() const {
  // @@protoc_insertion_point(field_get:smartseg.FrameSequenceDataParameter.pcd_path)
  return pcd_path_.GetNoArena();
}
inline void FrameSequenceDataParameter::set_pcd_path(const ::std::string& value) {
  set_has_pcd_path();
  pcd_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:smartseg.FrameSequenceDataParameter.pcd_path)
}
#if LANG_CXX11
inline void FrameSequenceDataParameter::set_pcd_path(::std::string&& value) {
  set_has_pcd_path();
  pcd_path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:smartseg.FrameSequenceDataParameter.pcd_path)
}
#endif
inline void FrameSequenceDataParameter::set_pcd_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_pcd_path();
  pcd_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:smartseg.FrameSequenceDataParameter.pcd_path)
}
inline void FrameSequenceDataParameter::set_pcd_path(const char* value, size_t size) {
  set_has_pcd_path();
  pcd_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:smartseg.FrameSequenceDataParameter.pcd_path)
}
inline ::std::string* FrameSequenceDataParameter::mutable_pcd_path() {
  set_has_pcd_path();
  // @@protoc_insertion_point(field_mutable:smartseg.FrameSequenceDataParameter.pcd_path)
  return pcd_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FrameSequenceDataParameter::release_pcd_path() {
  // @@protoc_insertion_point(field_release:smartseg.FrameSequenceDataParameter.pcd_path)
  clear_has_pcd_path();
  return pcd_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FrameSequenceDataParameter::set_allocated_pcd_path(::std::string* pcd_path) {
  if (pcd_path != NULL) {
    set_has_pcd_path();
  } else {
    clear_has_pcd_path();
  }
  pcd_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pcd_path);
  // @@protoc_insertion_point(field_set_allocated:smartseg.FrameSequenceDataParameter.pcd_path)
}

// required string label_path = 3;
inline bool FrameSequenceDataParameter::has_label_path() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FrameSequenceDataParameter::set_has_label_path() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FrameSequenceDataParameter::clear_has_label_path() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FrameSequenceDataParameter::clear_label_path() {
  label_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_label_path();
}
inline const ::std::string& FrameSequenceDataParameter::label_path() const {
  // @@protoc_insertion_point(field_get:smartseg.FrameSequenceDataParameter.label_path)
  return label_path_.GetNoArena();
}
inline void FrameSequenceDataParameter::set_label_path(const ::std::string& value) {
  set_has_label_path();
  label_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:smartseg.FrameSequenceDataParameter.label_path)
}
#if LANG_CXX11
inline void FrameSequenceDataParameter::set_label_path(::std::string&& value) {
  set_has_label_path();
  label_path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:smartseg.FrameSequenceDataParameter.label_path)
}
#endif
inline void FrameSequenceDataParameter::set_label_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_label_path();
  label_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:smartseg.FrameSequenceDataParameter.label_path)
}
inline void FrameSequenceDataParameter::set_label_path(const char* value, size_t size) {
  set_has_label_path();
  label_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:smartseg.FrameSequenceDataParameter.label_path)
}
inline ::std::string* FrameSequenceDataParameter::mutable_label_path() {
  set_has_label_path();
  // @@protoc_insertion_point(field_mutable:smartseg.FrameSequenceDataParameter.label_path)
  return label_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FrameSequenceDataParameter::release_label_path() {
  // @@protoc_insertion_point(field_release:smartseg.FrameSequenceDataParameter.label_path)
  clear_has_label_path();
  return label_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FrameSequenceDataParameter::set_allocated_label_path(::std::string* label_path) {
  if (label_path != NULL) {
    set_has_label_path();
  } else {
    clear_has_label_path();
  }
  label_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), label_path);
  // @@protoc_insertion_point(field_set_allocated:smartseg.FrameSequenceDataParameter.label_path)
}

// required string sequence_path = 4;
inline bool FrameSequenceDataParameter::has_sequence_path() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FrameSequenceDataParameter::set_has_sequence_path() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FrameSequenceDataParameter::clear_has_sequence_path() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FrameSequenceDataParameter::clear_sequence_path() {
  sequence_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sequence_path();
}
inline const ::std::string& FrameSequenceDataParameter::sequence_path() const {
  // @@protoc_insertion_point(field_get:smartseg.FrameSequenceDataParameter.sequence_path)
  return sequence_path_.GetNoArena();
}
inline void FrameSequenceDataParameter::set_sequence_path(const ::std::string& value) {
  set_has_sequence_path();
  sequence_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:smartseg.FrameSequenceDataParameter.sequence_path)
}
#if LANG_CXX11
inline void FrameSequenceDataParameter::set_sequence_path(::std::string&& value) {
  set_has_sequence_path();
  sequence_path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:smartseg.FrameSequenceDataParameter.sequence_path)
}
#endif
inline void FrameSequenceDataParameter::set_sequence_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_sequence_path();
  sequence_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:smartseg.FrameSequenceDataParameter.sequence_path)
}
inline void FrameSequenceDataParameter::set_sequence_path(const char* value, size_t size) {
  set_has_sequence_path();
  sequence_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:smartseg.FrameSequenceDataParameter.sequence_path)
}
inline ::std::string* FrameSequenceDataParameter::mutable_sequence_path() {
  set_has_sequence_path();
  // @@protoc_insertion_point(field_mutable:smartseg.FrameSequenceDataParameter.sequence_path)
  return sequence_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FrameSequenceDataParameter::release_sequence_path() {
  // @@protoc_insertion_point(field_release:smartseg.FrameSequenceDataParameter.sequence_path)
  clear_has_sequence_path();
  return sequence_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FrameSequenceDataParameter::set_allocated_sequence_path(::std::string* sequence_path) {
  if (sequence_path != NULL) {
    set_has_sequence_path();
  } else {
    clear_has_sequence_path();
  }
  sequence_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sequence_path);
  // @@protoc_insertion_point(field_set_allocated:smartseg.FrameSequenceDataParameter.sequence_path)
}

// required int32 num_frames = 5;
inline bool FrameSequenceDataParameter::has_num_frames() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void FrameSequenceDataParameter::set_has_num_frames() {
  _has_bits_[0] |= 0x00000010u;
}
inline void FrameSequenceDataParameter::clear_has_num_frames() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void FrameSequenceDataParameter::clear_num_frames() {
  num_frames_ = 0;
  clear_has_num_frames();
}
inline ::google::protobuf::int32 FrameSequenceDataParameter::num_frames() const {
  // @@protoc_insertion_point(field_get:smartseg.FrameSequenceDataParameter.num_frames)
  return num_frames_;
}
inline void FrameSequenceDataParameter::set_num_frames(::google::protobuf::int32 value) {
  set_has_num_frames();
  num_frames_ = value;
  // @@protoc_insertion_point(field_set:smartseg.FrameSequenceDataParameter.num_frames)
}

// optional int32 step = 6 [default = 1];
inline bool FrameSequenceDataParameter::has_step() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void FrameSequenceDataParameter::set_has_step() {
  _has_bits_[0] |= 0x00000040u;
}
inline void FrameSequenceDataParameter::clear_has_step() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void FrameSequenceDataParameter::clear_step() {
  step_ = 1;
  clear_has_step();
}
inline ::google::protobuf::int32 FrameSequenceDataParameter::step() const {
  // @@protoc_insertion_point(field_get:smartseg.FrameSequenceDataParameter.step)
  return step_;
}
inline void FrameSequenceDataParameter::set_step(::google::protobuf::int32 value) {
  set_has_step();
  step_ = value;
  // @@protoc_insertion_point(field_set:smartseg.FrameSequenceDataParameter.step)
}

// optional int32 buffer_size = 7 [default = 5];
inline bool FrameSequenceDataParameter::has_buffer_size() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void FrameSequenceDataParameter::set_has_buffer_size() {
  _has_bits_[0] |= 0x00000080u;
}
inline void FrameSequenceDataParameter::clear_has_buffer_size() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void FrameSequenceDataParameter::clear_buffer_size() {
  buffer_size_ = 5;
  clear_has_buffer_size();
}
inline ::google::protobuf::int32 FrameSequenceDataParameter::buffer_size() const {
  // @@protoc_insertion_point(field_get:smartseg.FrameSequenceDataParameter.buffer_size)
  return buffer_size_;
}
inline void FrameSequenceDataParameter::set_buffer_size(::google::protobuf::int32 value) {
  set_has_buffer_size();
  buffer_size_ = value;
  // @@protoc_insertion_point(field_set:smartseg.FrameSequenceDataParameter.buffer_size)
}

// optional float perturbation_rate = 8 [default = 0];
inline bool FrameSequenceDataParameter::has_perturbation_rate() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void FrameSequenceDataParameter::set_has_perturbation_rate() {
  _has_bits_[0] |= 0x00000020u;
}
inline void FrameSequenceDataParameter::clear_has_perturbation_rate() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void FrameSequenceDataParameter::clear_perturbation_rate() {
  perturbation_rate_ = 0;
  clear_has_perturbation_rate();
}
inline float FrameSequenceDataParameter::perturbation_rate() const {
  // @@protoc_insertion_point(field_get:smartseg.FrameSequenceDataParameter.perturbation_rate)
  return perturbation_rate_;
}
inline void FrameSequenceDataParameter::set_perturbation_rate(float value) {
  set_has_perturbation_rate();
  perturbation_rate_ = value;
  // @@protoc_insertion_point(field_set:smartseg.FrameSequenceDataParameter.perturbation_rate)
}

// -------------------------------------------------------------------

// BlobVisualizeParameter

// required string name = 1 [default = "visualize"];
inline bool BlobVisualizeParameter::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BlobVisualizeParameter::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BlobVisualizeParameter::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BlobVisualizeParameter::clear_name() {
  name_.ClearToDefaultNoArena(&BlobVisualizeParameter::_default_name_.get());
  clear_has_name();
}
inline const ::std::string& BlobVisualizeParameter::name() const {
  // @@protoc_insertion_point(field_get:smartseg.BlobVisualizeParameter.name)
  return name_.GetNoArena();
}
inline void BlobVisualizeParameter::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&BlobVisualizeParameter::_default_name_.get(), value);
  // @@protoc_insertion_point(field_set:smartseg.BlobVisualizeParameter.name)
}
#if LANG_CXX11
inline void BlobVisualizeParameter::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &BlobVisualizeParameter::_default_name_.get(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:smartseg.BlobVisualizeParameter.name)
}
#endif
inline void BlobVisualizeParameter::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&BlobVisualizeParameter::_default_name_.get(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:smartseg.BlobVisualizeParameter.name)
}
inline void BlobVisualizeParameter::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&BlobVisualizeParameter::_default_name_.get(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:smartseg.BlobVisualizeParameter.name)
}
inline ::std::string* BlobVisualizeParameter::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:smartseg.BlobVisualizeParameter.name)
  return name_.MutableNoArena(&BlobVisualizeParameter::_default_name_.get());
}
inline ::std::string* BlobVisualizeParameter::release_name() {
  // @@protoc_insertion_point(field_release:smartseg.BlobVisualizeParameter.name)
  clear_has_name();
  return name_.ReleaseNoArena(&BlobVisualizeParameter::_default_name_.get());
}
inline void BlobVisualizeParameter::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&BlobVisualizeParameter::_default_name_.get(), name);
  // @@protoc_insertion_point(field_set_allocated:smartseg.BlobVisualizeParameter.name)
}

// optional float lower_bound = 2 [default = 0];
inline bool BlobVisualizeParameter::has_lower_bound() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BlobVisualizeParameter::set_has_lower_bound() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BlobVisualizeParameter::clear_has_lower_bound() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BlobVisualizeParameter::clear_lower_bound() {
  lower_bound_ = 0;
  clear_has_lower_bound();
}
inline float BlobVisualizeParameter::lower_bound() const {
  // @@protoc_insertion_point(field_get:smartseg.BlobVisualizeParameter.lower_bound)
  return lower_bound_;
}
inline void BlobVisualizeParameter::set_lower_bound(float value) {
  set_has_lower_bound();
  lower_bound_ = value;
  // @@protoc_insertion_point(field_set:smartseg.BlobVisualizeParameter.lower_bound)
}

// optional float upper_bound = 3 [default = 1];
inline bool BlobVisualizeParameter::has_upper_bound() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BlobVisualizeParameter::set_has_upper_bound() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BlobVisualizeParameter::clear_has_upper_bound() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BlobVisualizeParameter::clear_upper_bound() {
  upper_bound_ = 1;
  clear_has_upper_bound();
}
inline float BlobVisualizeParameter::upper_bound() const {
  // @@protoc_insertion_point(field_get:smartseg.BlobVisualizeParameter.upper_bound)
  return upper_bound_;
}
inline void BlobVisualizeParameter::set_upper_bound(float value) {
  set_has_upper_bound();
  upper_bound_ = value;
  // @@protoc_insertion_point(field_set:smartseg.BlobVisualizeParameter.upper_bound)
}

// optional float ignore_value = 4 [default = 0];
inline bool BlobVisualizeParameter::has_ignore_value() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BlobVisualizeParameter::set_has_ignore_value() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BlobVisualizeParameter::clear_has_ignore_value() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BlobVisualizeParameter::clear_ignore_value() {
  ignore_value_ = 0;
  clear_has_ignore_value();
}
inline float BlobVisualizeParameter::ignore_value() const {
  // @@protoc_insertion_point(field_get:smartseg.BlobVisualizeParameter.ignore_value)
  return ignore_value_;
}
inline void BlobVisualizeParameter::set_ignore_value(float value) {
  set_has_ignore_value();
  ignore_value_ = value;
  // @@protoc_insertion_point(field_set:smartseg.BlobVisualizeParameter.ignore_value)
}

// optional int32 channel = 5 [default = 0];
inline bool BlobVisualizeParameter::has_channel() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BlobVisualizeParameter::set_has_channel() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BlobVisualizeParameter::clear_has_channel() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BlobVisualizeParameter::clear_channel() {
  channel_ = 0;
  clear_has_channel();
}
inline ::google::protobuf::int32 BlobVisualizeParameter::channel() const {
  // @@protoc_insertion_point(field_get:smartseg.BlobVisualizeParameter.channel)
  return channel_;
}
inline void BlobVisualizeParameter::set_channel(::google::protobuf::int32 value) {
  set_has_channel();
  channel_ = value;
  // @@protoc_insertion_point(field_set:smartseg.BlobVisualizeParameter.channel)
}

// -------------------------------------------------------------------

// PlanViewParameter

// required float range = 1;
inline bool PlanViewParameter::has_range() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlanViewParameter::set_has_range() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlanViewParameter::clear_has_range() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlanViewParameter::clear_range() {
  range_ = 0;
  clear_has_range();
}
inline float PlanViewParameter::range() const {
  // @@protoc_insertion_point(field_get:smartseg.PlanViewParameter.range)
  return range_;
}
inline void PlanViewParameter::set_range(float value) {
  set_has_range();
  range_ = value;
  // @@protoc_insertion_point(field_set:smartseg.PlanViewParameter.range)
}

// required int32 splits = 2;
inline bool PlanViewParameter::has_splits() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlanViewParameter::set_has_splits() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PlanViewParameter::clear_has_splits() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PlanViewParameter::clear_splits() {
  splits_ = 0;
  clear_has_splits();
}
inline ::google::protobuf::int32 PlanViewParameter::splits() const {
  // @@protoc_insertion_point(field_get:smartseg.PlanViewParameter.splits)
  return splits_;
}
inline void PlanViewParameter::set_splits(::google::protobuf::int32 value) {
  set_has_splits();
  splits_ = value;
  // @@protoc_insertion_point(field_set:smartseg.PlanViewParameter.splits)
}

// -------------------------------------------------------------------

// PlanViewExtractorParameter

// required float filter_min_z = 1;
inline bool PlanViewExtractorParameter::has_filter_min_z() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlanViewExtractorParameter::set_has_filter_min_z() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlanViewExtractorParameter::clear_has_filter_min_z() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlanViewExtractorParameter::clear_filter_min_z() {
  filter_min_z_ = 0;
  clear_has_filter_min_z();
}
inline float PlanViewExtractorParameter::filter_min_z() const {
  // @@protoc_insertion_point(field_get:smartseg.PlanViewExtractorParameter.filter_min_z)
  return filter_min_z_;
}
inline void PlanViewExtractorParameter::set_filter_min_z(float value) {
  set_has_filter_min_z();
  filter_min_z_ = value;
  // @@protoc_insertion_point(field_set:smartseg.PlanViewExtractorParameter.filter_min_z)
}

// required float filter_max_z = 2;
inline bool PlanViewExtractorParameter::has_filter_max_z() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlanViewExtractorParameter::set_has_filter_max_z() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PlanViewExtractorParameter::clear_has_filter_max_z() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PlanViewExtractorParameter::clear_filter_max_z() {
  filter_max_z_ = 0;
  clear_has_filter_max_z();
}
inline float PlanViewExtractorParameter::filter_max_z() const {
  // @@protoc_insertion_point(field_get:smartseg.PlanViewExtractorParameter.filter_max_z)
  return filter_max_z_;
}
inline void PlanViewExtractorParameter::set_filter_max_z(float value) {
  set_has_filter_max_z();
  filter_max_z_ = value;
  // @@protoc_insertion_point(field_set:smartseg.PlanViewExtractorParameter.filter_max_z)
}

// optional float shift_z = 3 [default = 0];
inline bool PlanViewExtractorParameter::has_shift_z() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PlanViewExtractorParameter::set_has_shift_z() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PlanViewExtractorParameter::clear_has_shift_z() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PlanViewExtractorParameter::clear_shift_z() {
  shift_z_ = 0;
  clear_has_shift_z();
}
inline float PlanViewExtractorParameter::shift_z() const {
  // @@protoc_insertion_point(field_get:smartseg.PlanViewExtractorParameter.shift_z)
  return shift_z_;
}
inline void PlanViewExtractorParameter::set_shift_z(float value) {
  set_has_shift_z();
  shift_z_ = value;
  // @@protoc_insertion_point(field_set:smartseg.PlanViewExtractorParameter.shift_z)
}

// -------------------------------------------------------------------

// HorizontalViewParameter

// required float lower_pitch = 1;
inline bool HorizontalViewParameter::has_lower_pitch() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HorizontalViewParameter::set_has_lower_pitch() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HorizontalViewParameter::clear_has_lower_pitch() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HorizontalViewParameter::clear_lower_pitch() {
  lower_pitch_ = 0;
  clear_has_lower_pitch();
}
inline float HorizontalViewParameter::lower_pitch() const {
  // @@protoc_insertion_point(field_get:smartseg.HorizontalViewParameter.lower_pitch)
  return lower_pitch_;
}
inline void HorizontalViewParameter::set_lower_pitch(float value) {
  set_has_lower_pitch();
  lower_pitch_ = value;
  // @@protoc_insertion_point(field_set:smartseg.HorizontalViewParameter.lower_pitch)
}

// required float upper_pitch = 2;
inline bool HorizontalViewParameter::has_upper_pitch() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HorizontalViewParameter::set_has_upper_pitch() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HorizontalViewParameter::clear_has_upper_pitch() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HorizontalViewParameter::clear_upper_pitch() {
  upper_pitch_ = 0;
  clear_has_upper_pitch();
}
inline float HorizontalViewParameter::upper_pitch() const {
  // @@protoc_insertion_point(field_get:smartseg.HorizontalViewParameter.upper_pitch)
  return upper_pitch_;
}
inline void HorizontalViewParameter::set_upper_pitch(float value) {
  set_has_upper_pitch();
  upper_pitch_ = value;
  // @@protoc_insertion_point(field_set:smartseg.HorizontalViewParameter.upper_pitch)
}

// required int32 rows = 3;
inline bool HorizontalViewParameter::has_rows() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HorizontalViewParameter::set_has_rows() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HorizontalViewParameter::clear_has_rows() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HorizontalViewParameter::clear_rows() {
  rows_ = 0;
  clear_has_rows();
}
inline ::google::protobuf::int32 HorizontalViewParameter::rows() const {
  // @@protoc_insertion_point(field_get:smartseg.HorizontalViewParameter.rows)
  return rows_;
}
inline void HorizontalViewParameter::set_rows(::google::protobuf::int32 value) {
  set_has_rows();
  rows_ = value;
  // @@protoc_insertion_point(field_set:smartseg.HorizontalViewParameter.rows)
}

// required int32 cols = 4;
inline bool HorizontalViewParameter::has_cols() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void HorizontalViewParameter::set_has_cols() {
  _has_bits_[0] |= 0x00000008u;
}
inline void HorizontalViewParameter::clear_has_cols() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void HorizontalViewParameter::clear_cols() {
  cols_ = 0;
  clear_has_cols();
}
inline ::google::protobuf::int32 HorizontalViewParameter::cols() const {
  // @@protoc_insertion_point(field_get:smartseg.HorizontalViewParameter.cols)
  return cols_;
}
inline void HorizontalViewParameter::set_cols(::google::protobuf::int32 value) {
  set_has_cols();
  cols_ = value;
  // @@protoc_insertion_point(field_set:smartseg.HorizontalViewParameter.cols)
}

// -------------------------------------------------------------------

// HorizontalViewExtractorParameter

// -------------------------------------------------------------------

// SideViewParameter

// required float range = 1;
inline bool SideViewParameter::has_range() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SideViewParameter::set_has_range() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SideViewParameter::clear_has_range() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SideViewParameter::clear_range() {
  range_ = 0;
  clear_has_range();
}
inline float SideViewParameter::range() const {
  // @@protoc_insertion_point(field_get:smartseg.SideViewParameter.range)
  return range_;
}
inline void SideViewParameter::set_range(float value) {
  set_has_range();
  range_ = value;
  // @@protoc_insertion_point(field_set:smartseg.SideViewParameter.range)
}

// required int32 splits = 2;
inline bool SideViewParameter::has_splits() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SideViewParameter::set_has_splits() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SideViewParameter::clear_has_splits() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SideViewParameter::clear_splits() {
  splits_ = 0;
  clear_has_splits();
}
inline ::google::protobuf::int32 SideViewParameter::splits() const {
  // @@protoc_insertion_point(field_get:smartseg.SideViewParameter.splits)
  return splits_;
}
inline void SideViewParameter::set_splits(::google::protobuf::int32 value) {
  set_has_splits();
  splits_ = value;
  // @@protoc_insertion_point(field_set:smartseg.SideViewParameter.splits)
}

// required int32 side = 3;
inline bool SideViewParameter::has_side() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SideViewParameter::set_has_side() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SideViewParameter::clear_has_side() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SideViewParameter::clear_side() {
  side_ = 0;
  clear_has_side();
}
inline ::google::protobuf::int32 SideViewParameter::side() const {
  // @@protoc_insertion_point(field_get:smartseg.SideViewParameter.side)
  return side_;
}
inline void SideViewParameter::set_side(::google::protobuf::int32 value) {
  set_has_side();
  side_ = value;
  // @@protoc_insertion_point(field_set:smartseg.SideViewParameter.side)
}

// -------------------------------------------------------------------

// SideViewExtractorParameter

// -------------------------------------------------------------------

// SegmentorParameter

// optional bool training_mode = 1 [default = false];
inline bool SegmentorParameter::has_training_mode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SegmentorParameter::set_has_training_mode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SegmentorParameter::clear_has_training_mode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SegmentorParameter::clear_training_mode() {
  training_mode_ = false;
  clear_has_training_mode();
}
inline bool SegmentorParameter::training_mode() const {
  // @@protoc_insertion_point(field_get:smartseg.SegmentorParameter.training_mode)
  return training_mode_;
}
inline void SegmentorParameter::set_training_mode(bool value) {
  set_has_training_mode();
  training_mode_ = value;
  // @@protoc_insertion_point(field_set:smartseg.SegmentorParameter.training_mode)
}

// optional bool merge_diagonal_grids = 2 [default = false];
inline bool SegmentorParameter::has_merge_diagonal_grids() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SegmentorParameter::set_has_merge_diagonal_grids() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SegmentorParameter::clear_has_merge_diagonal_grids() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SegmentorParameter::clear_merge_diagonal_grids() {
  merge_diagonal_grids_ = false;
  clear_has_merge_diagonal_grids();
}
inline bool SegmentorParameter::merge_diagonal_grids() const {
  // @@protoc_insertion_point(field_get:smartseg.SegmentorParameter.merge_diagonal_grids)
  return merge_diagonal_grids_;
}
inline void SegmentorParameter::set_merge_diagonal_grids(bool value) {
  set_has_merge_diagonal_grids();
  merge_diagonal_grids_ = value;
  // @@protoc_insertion_point(field_set:smartseg.SegmentorParameter.merge_diagonal_grids)
}

// optional bool find_best_cut = 3 [default = false];
inline bool SegmentorParameter::has_find_best_cut() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SegmentorParameter::set_has_find_best_cut() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SegmentorParameter::clear_has_find_best_cut() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SegmentorParameter::clear_find_best_cut() {
  find_best_cut_ = false;
  clear_has_find_best_cut();
}
inline bool SegmentorParameter::find_best_cut() const {
  // @@protoc_insertion_point(field_get:smartseg.SegmentorParameter.find_best_cut)
  return find_best_cut_;
}
inline void SegmentorParameter::set_find_best_cut(bool value) {
  set_has_find_best_cut();
  find_best_cut_ = value;
  // @@protoc_insertion_point(field_set:smartseg.SegmentorParameter.find_best_cut)
}

// optional float topz_threshold = 4 [default = -1];
inline bool SegmentorParameter::has_topz_threshold() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SegmentorParameter::set_has_topz_threshold() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SegmentorParameter::clear_has_topz_threshold() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SegmentorParameter::clear_topz_threshold() {
  topz_threshold_ = -1;
  clear_has_topz_threshold();
}
inline float SegmentorParameter::topz_threshold() const {
  // @@protoc_insertion_point(field_get:smartseg.SegmentorParameter.topz_threshold)
  return topz_threshold_;
}
inline void SegmentorParameter::set_topz_threshold(float value) {
  set_has_topz_threshold();
  topz_threshold_ = value;
  // @@protoc_insertion_point(field_set:smartseg.SegmentorParameter.topz_threshold)
}

// -------------------------------------------------------------------

// FrameTargetParameter

// optional int32 startup_iter = 1 [default = 0];
inline bool FrameTargetParameter::has_startup_iter() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FrameTargetParameter::set_has_startup_iter() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FrameTargetParameter::clear_has_startup_iter() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FrameTargetParameter::clear_startup_iter() {
  startup_iter_ = 0;
  clear_has_startup_iter();
}
inline ::google::protobuf::int32 FrameTargetParameter::startup_iter() const {
  // @@protoc_insertion_point(field_get:smartseg.FrameTargetParameter.startup_iter)
  return startup_iter_;
}
inline void FrameTargetParameter::set_startup_iter(::google::protobuf::int32 value) {
  set_has_startup_iter();
  startup_iter_ = value;
  // @@protoc_insertion_point(field_set:smartseg.FrameTargetParameter.startup_iter)
}

// optional float max_center_norm = 2 [default = 0];
inline bool FrameTargetParameter::has_max_center_norm() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FrameTargetParameter::set_has_max_center_norm() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FrameTargetParameter::clear_has_max_center_norm() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FrameTargetParameter::clear_max_center_norm() {
  max_center_norm_ = 0;
  clear_has_max_center_norm();
}
inline float FrameTargetParameter::max_center_norm() const {
  // @@protoc_insertion_point(field_get:smartseg.FrameTargetParameter.max_center_norm)
  return max_center_norm_;
}
inline void FrameTargetParameter::set_max_center_norm(float value) {
  set_has_max_center_norm();
  max_center_norm_ = value;
  // @@protoc_insertion_point(field_set:smartseg.FrameTargetParameter.max_center_norm)
}

// optional bool equal_objectness_weight = 3 [default = false];
inline bool FrameTargetParameter::has_equal_objectness_weight() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FrameTargetParameter::set_has_equal_objectness_weight() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FrameTargetParameter::clear_has_equal_objectness_weight() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FrameTargetParameter::clear_equal_objectness_weight() {
  equal_objectness_weight_ = false;
  clear_has_equal_objectness_weight();
}
inline bool FrameTargetParameter::equal_objectness_weight() const {
  // @@protoc_insertion_point(field_get:smartseg.FrameTargetParameter.equal_objectness_weight)
  return equal_objectness_weight_;
}
inline void FrameTargetParameter::set_equal_objectness_weight(bool value) {
  set_has_equal_objectness_weight();
  equal_objectness_weight_ = value;
  // @@protoc_insertion_point(field_set:smartseg.FrameTargetParameter.equal_objectness_weight)
}

// optional bool point_center = 4 [default = false];
inline bool FrameTargetParameter::has_point_center() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FrameTargetParameter::set_has_point_center() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FrameTargetParameter::clear_has_point_center() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FrameTargetParameter::clear_point_center() {
  point_center_ = false;
  clear_has_point_center();
}
inline bool FrameTargetParameter::point_center() const {
  // @@protoc_insertion_point(field_get:smartseg.FrameTargetParameter.point_center)
  return point_center_;
}
inline void FrameTargetParameter::set_point_center(bool value) {
  set_has_point_center();
  point_center_ = value;
  // @@protoc_insertion_point(field_set:smartseg.FrameTargetParameter.point_center)
}

// optional bool sample_grid_center = 5 [default = false];
inline bool FrameTargetParameter::has_sample_grid_center() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void FrameTargetParameter::set_has_sample_grid_center() {
  _has_bits_[0] |= 0x00000010u;
}
inline void FrameTargetParameter::clear_has_sample_grid_center() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void FrameTargetParameter::clear_sample_grid_center() {
  sample_grid_center_ = false;
  clear_has_sample_grid_center();
}
inline bool FrameTargetParameter::sample_grid_center() const {
  // @@protoc_insertion_point(field_get:smartseg.FrameTargetParameter.sample_grid_center)
  return sample_grid_center_;
}
inline void FrameTargetParameter::set_sample_grid_center(bool value) {
  set_has_sample_grid_center();
  sample_grid_center_ = value;
  // @@protoc_insertion_point(field_set:smartseg.FrameTargetParameter.sample_grid_center)
}

// -------------------------------------------------------------------

// ViewPoolingParameter

// -------------------------------------------------------------------

// ViewUnpoolingParameter

// -------------------------------------------------------------------

// PointInterpolationParameter

// -------------------------------------------------------------------

// OnlineNormParameter

// required float iters = 1;
inline bool OnlineNormParameter::has_iters() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OnlineNormParameter::set_has_iters() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OnlineNormParameter::clear_has_iters() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OnlineNormParameter::clear_iters() {
  iters_ = 0;
  clear_has_iters();
}
inline float OnlineNormParameter::iters() const {
  // @@protoc_insertion_point(field_get:smartseg.OnlineNormParameter.iters)
  return iters_;
}
inline void OnlineNormParameter::set_iters(float value) {
  set_has_iters();
  iters_ = value;
  // @@protoc_insertion_point(field_set:smartseg.OnlineNormParameter.iters)
}

// optional float moving_average_fraction = 2 [default = 0.999];
inline bool OnlineNormParameter::has_moving_average_fraction() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OnlineNormParameter::set_has_moving_average_fraction() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OnlineNormParameter::clear_has_moving_average_fraction() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OnlineNormParameter::clear_moving_average_fraction() {
  moving_average_fraction_ = 0.999f;
  clear_has_moving_average_fraction();
}
inline float OnlineNormParameter::moving_average_fraction() const {
  // @@protoc_insertion_point(field_get:smartseg.OnlineNormParameter.moving_average_fraction)
  return moving_average_fraction_;
}
inline void OnlineNormParameter::set_moving_average_fraction(float value) {
  set_has_moving_average_fraction();
  moving_average_fraction_ = value;
  // @@protoc_insertion_point(field_set:smartseg.OnlineNormParameter.moving_average_fraction)
}

// optional float eps = 3 [default = 1e-05];
inline bool OnlineNormParameter::has_eps() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OnlineNormParameter::set_has_eps() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OnlineNormParameter::clear_has_eps() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OnlineNormParameter::clear_eps() {
  eps_ = 1e-05f;
  clear_has_eps();
}
inline float OnlineNormParameter::eps() const {
  // @@protoc_insertion_point(field_get:smartseg.OnlineNormParameter.eps)
  return eps_;
}
inline void OnlineNormParameter::set_eps(float value) {
  set_has_eps();
  eps_ = value;
  // @@protoc_insertion_point(field_set:smartseg.OnlineNormParameter.eps)
}

// -------------------------------------------------------------------

// DilationParameter

// required .smartseg.DilationParameter.Method method = 1;
inline bool DilationParameter::has_method() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DilationParameter::set_has_method() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DilationParameter::clear_has_method() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DilationParameter::clear_method() {
  method_ = 0;
  clear_has_method();
}
inline ::smartseg::DilationParameter_Method DilationParameter::method() const {
  // @@protoc_insertion_point(field_get:smartseg.DilationParameter.method)
  return static_cast< ::smartseg::DilationParameter_Method >(method_);
}
inline void DilationParameter::set_method(::smartseg::DilationParameter_Method value) {
  assert(::smartseg::DilationParameter_Method_IsValid(value));
  set_has_method();
  method_ = value;
  // @@protoc_insertion_point(field_set:smartseg.DilationParameter.method)
}

// required int32 nonempty_channel = 2;
inline bool DilationParameter::has_nonempty_channel() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DilationParameter::set_has_nonempty_channel() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DilationParameter::clear_has_nonempty_channel() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DilationParameter::clear_nonempty_channel() {
  nonempty_channel_ = 0;
  clear_has_nonempty_channel();
}
inline ::google::protobuf::int32 DilationParameter::nonempty_channel() const {
  // @@protoc_insertion_point(field_get:smartseg.DilationParameter.nonempty_channel)
  return nonempty_channel_;
}
inline void DilationParameter::set_nonempty_channel(::google::protobuf::int32 value) {
  set_has_nonempty_channel();
  nonempty_channel_ = value;
  // @@protoc_insertion_point(field_set:smartseg.DilationParameter.nonempty_channel)
}

// required int32 feature_channel = 3;
inline bool DilationParameter::has_feature_channel() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DilationParameter::set_has_feature_channel() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DilationParameter::clear_has_feature_channel() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DilationParameter::clear_feature_channel() {
  feature_channel_ = 0;
  clear_has_feature_channel();
}
inline ::google::protobuf::int32 DilationParameter::feature_channel() const {
  // @@protoc_insertion_point(field_get:smartseg.DilationParameter.feature_channel)
  return feature_channel_;
}
inline void DilationParameter::set_feature_channel(::google::protobuf::int32 value) {
  set_has_feature_channel();
  feature_channel_ = value;
  // @@protoc_insertion_point(field_set:smartseg.DilationParameter.feature_channel)
}

// required int32 steps = 4;
inline bool DilationParameter::has_steps() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void DilationParameter::set_has_steps() {
  _has_bits_[0] |= 0x00000008u;
}
inline void DilationParameter::clear_has_steps() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void DilationParameter::clear_steps() {
  steps_ = 0;
  clear_has_steps();
}
inline ::google::protobuf::int32 DilationParameter::steps() const {
  // @@protoc_insertion_point(field_get:smartseg.DilationParameter.steps)
  return steps_;
}
inline void DilationParameter::set_steps(::google::protobuf::int32 value) {
  set_has_steps();
  steps_ = value;
  // @@protoc_insertion_point(field_set:smartseg.DilationParameter.steps)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace smartseg

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::smartseg::DilationParameter_Method> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::smartseg::DilationParameter_Method>() {
  return ::smartseg::DilationParameter_Method_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_caffe_5fsmartseg_2eproto__INCLUDED
